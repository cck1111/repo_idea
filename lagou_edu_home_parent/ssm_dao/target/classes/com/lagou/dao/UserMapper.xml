<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lagou.dao.UserMapper">
    <!--分页&多条件查询-->
    <select id="findAllUserByPage" parameterType="com.lagou.domain.UserVo" resultType="com.lagou.domain.User">
        select * from user
        <where>
            <if test="true">
                and is_del != 1
            </if>
            <if test="username != null and username != ''">
                and name = #{username}
            </if>
            <if test="startCreateTime != null and endCreateTime != null">
                and create_time between #{startCreateTime} And #{endCreateTime}
            </if>
        </where>
    </select>

    <!--用户注册-->
    <insert id="register" parameterType="com.lagou.domain.User">
        INSERT INTO USER(NAME,phone,password,create_time,update_time) VALUES (#{name},#{phone},#{password},#{create_time},#{update_time})
    </insert>

    <!--用户登录-->
    <select id="login" parameterType="com.lagou.domain.User" resultType="com.lagou.domain.User">
        select * from user where phone=#{phone}
    </select>

    <!--根据用户id查询其角色（分配角色进行回显）-->
    <select id="findUserRoleById" parameterType="int" resultType="com.lagou.domain.Role">
        SELECT * FROM roles r INNER JOIN user_role_relation ur ON r.`id` = ur.`role_id`
        WHERE ur.`user_id` = #{uid}
    </select>

    <!--分配角色 操作user_role_relation表
        先删除用户id对应的角色信息-->
    <delete id="deleteRole" parameterType="int">
        delete from user_role_relation where user_id = #{uid}
    </delete>
    <!--再对用户进行角色的添加 进行关联-->
    <insert id="userContextRole" parameterType="com.lagou.domain.User_Role_relation">
        insert into user_role_relation values(null,#{userId},#{roleId},
        #{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>


    <!--
         难点：用户动态菜单跟资源的查询
    -->
    <!--1.根据用户id查询角色  上方已经编写好了-->

    <!--2.根据据角色ID 查询角色所拥有的顶级菜单(parentID = -1)-->
    <select id="findParentMenuByRoleId" parameterType="java.util.List" resultType="com.lagou.domain.Menu">
        SELECT
            DISTINCT m.*
        FROM roles r INNER JOIN role_menu_relation rm ON r.id = rm.role_id
	                INNER JOIN menu m ON m.id = rm.menu_id WHERE m.parent_id = -1 AND r.id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>

    </select>

    <!--3.根据ParentId (顶级菜单的id= 子级菜单的parentId） 查询子级菜单信息-->
    <select id="findSubMenuByPid" parameterType="int" resultType="com.lagou.domain.Menu">
        select * from menu where parent_id = #{pid}
    </select>

    <!--4.据角色ID，查询角色的资源权限的信息-->
    <select id="findResourceByRoleId" resultType="com.lagou.domain.Resource" parameterType="java.util.List">
        SELECT
	        DISTINCT r.*
        FROM
	        resource r INNER JOIN role_resource_relation rr ON r.id = rr.resource_id
		                INNER JOIN roles ro ON ro.id = rr.role_id
        WHERE ro.id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>